/*****************************************************************************
TITLE: Claims																																
AUTHOR: NIKHIL PATHAK
ROLL NO: 2101CS50
Declaration of Authorship
This txt file, claims.txt, is part of the miniproject of CS209/CS210 at the 
department of Computer Science and Engg, IIT Patna . 
*****************************************************************************/

Files:
==========
*All the files i submitted, asm.cpp and emu.cpp and claims.txt, have my name and student id at the start, along with a declaration of authorship.

The evidence for Assembler including the output files from the 4 test examples has also been uploaded. They are test1(3 output files), test2(1 output files), test3(3 output file) and memcpy(3 output files). All the test files have been tested and work properly. As for the evidence for the emulator is uploaded.

*Both of my cpp programs did not show any errors and warnings when i compiled it with g++ file.cpp
*Two programs are compilable with g++ asm.cpp -o asm and g++ emu.cpp -o emu.


=============================
Program format and structure:
=============================
1. The assembler:

    * with two data structures to store respectively labels and mnemonic table with expected operands.
    * uses a single routine for both passes.
    * detects label erros.
    * consistent and sensible formatting with sensible program structure. 
    * sensible variable, function & type names with explanatory comments.
		* advanced listing file.
		* assembles test programs.
	  * can implements and demonstrates the instruction SET.

2. The emulator:

		* with three data structures to store respectively memory, mnemonic table with expected operands
		and a linked list structure word.
    * loads object file, 
    * by giving the instructions like "-befor/-after" , the program can produce memory dump before/after execution.
    * by giving the instruction like "-trace", the program prints the result of program executed.
    * detects errant programs.

=============================
Testing:
=============================

1. The assembler:

I have tested 4/4 examples shown as bellow. The errors only occurred in the file test2.asm and 
the program immediately stopped on the second pass. 

The others were tested without any errors detected and produced three output files, listing file, 
error log file and machine readable object file, for each example. 

After comparing the listing files and object file of memcpy.asm , memcpy.l, triangle.l memcpy.o 
with the implemented result given on the assignment, both of them show no difference 
from those provided( if there is different  that is fine too) 
 

1)#Input: asm test1.asm

#Output: 
a. listfile.lst 
b. logfile.log (without any error messages)
c. machineCode.o

2) #Input:asm test2.asm

#Output: 
a. logfile.log (with following error messgaes)

Line Number 4 ERROR: Duplicate label definition
Line Number 5 ERROR: no such label
Line Number 6 ERROR: Invalid format: not a valid label or a number
Line Number 7 ERROR: Missing operand
Line Number 8 ERROR: unexpected operand
Line Number 9 ERROR: extra on end of line
Line Number 10 ERROR: Bogus Label name
Line Number 11 ERROR: Bogus Mnemonic
Line Number 12 ERROR: Bogus Mnemonic

3) #Input:asm test3.asm

#Output: 
a. listfile.lst 
b. logfile.log (without any error messages)
c. machineCode.o


4) #Input:asm memcpy.asm

#Output: 
a. listfile.lst 
b. logfile.log (without any error messages)
c. machineCode.o


2. The emulator:

I have tested three examples shown as bellow. No errors occured in the program 

The others were tested without any errors detected and produced excution data both on the screen and 
output text file for each example according to the usage instruction. 

After running the bin file given, the trace data are the same as 
the implemented result from my own program.

1)
#Input:emu -trace test1.o
#Output: test1.txt

2)
#Input:emu -trace test2.o
#Output: test2.txt

3)
#Input:emu -trace test3.o
#Output: test3.txt